---
import Layout from "../../layouts/Layout.astro";

import { CardPlayButton } from "@/components/CardPlayButton";
import { SongsTable } from "@/components/SongsTable";
import { allPlaylists, songs } from "@/lib/data";

const { id } = Astro.params;

const playlist = allPlaylists.find((playlist) => playlist.id === id);
const playListSongs = songs.filter(
  (song) => song.albumId === playlist?.albumId
);
---

<Layout title="Spotify Clone">
  <div
    id="playlist-container"
    style={`background-color: ${playlist?.color.accent}`}
    class="relative flex flex-col h-full overflow-x-hidden bg-background-base bg-gradient-to-t from-45% from-background-base"
    transition:name=`playlist ${id} box`
  >
  
    <header class="flex flex-row gap-8 px-6 mt-12">
      <picture class="aspect-square w-52 h-52 flex-none">
        <img
          src={playlist?.cover}
          alt={`Cover of ${playlist?.title}`}
          class="object-cover w-full h-full shadow-lg"
          transition:name=`playlist ${playlist?.id} image`
        />
      </picture>

      <div class="flex flex-col justify-between">
        <h2 class="flex flex-1 items-end">Playlist</h2>
        <div>
          <h1 class="text-5xl font-bold block text-white">
            {playlist?.title}
            <span transition:name=`playlist ${playlist?.id} title`></span>
          </h1>
        </div>

        <div class="flex-1 flex items-end">
          <div class="text-sm text-secondary font-normal">
            <div transition:name=`playlist ${playlist?.id} artist`>
              <span>{playlist?.artists.join(", ")}</span>
            </div>
            <p class="mt-1">
              <span>{playListSongs.length} songs</span>, X min X sec
            </p>
          </div>
        </div>
      </div>
    </header>

    <div class="pt-6 pl-6">
      <CardPlayButton id={id} client:load size="large" />
    </div>
    
    <section class="p-6">
      <SongsTable songs={playListSongs} client:load />
    </section>
  </div>
</Layout>
